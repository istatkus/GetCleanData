{
    "contents" : "## Get and Clean Data Assignment\n## Set up the environment\n## Class: Get and Clean Data \n## Objective take data from smartphone activity tracker and tidy it\n##\n## Acknowledge\n##[1] Davide Anguita, Alessandro Ghio, Luca Oneto, Xavier Parra and Jorge L. Reyes-Ortiz. \n##A Public Domain Dataset for Human Activity Recognition Using Smartphones. \n## 21th European Symposium on Artificial Neural Networks, Computational Intelligence and \n## Machine Learning,ESANN 2013. Bruges, Belgium 24-26 April 2013. \n##\n\nsetwd(\"C:/Users/irene/Desktop/CourseraDS/GetCleanData/prj\")\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(reshape2)\n##\n## Step 1: Get the data by Downloading and unzipping\n\nmyfile <- \"getdata_dataset.zip\"\n\nif ( !file.exists (myfile)){\n    fileURL <- \"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\"\n    download.file(fileURL, myfile, method=\"curl\")\n    } \nif ( !file.exists(\"UCI HAR Dataset\")) { \n  unzip( myfile) \n}\n\n## Step 2: Prepare the table for Activity to use later to swap out the code\n\nactivityLov <- read.table(\"./UCI HAR Dataset/activity_labels.txt\")\n\n## Step 3: Prepare the table for the feature column headers to use later\n##         ran into double column name issue with select trying new approach \n##         but left the replace to remove brackets\n\nfeatures <- read.table(\"./UCI HAR Dataset/features.txt\")\n##         saving off the second column that has the names\n\nfeatures <-features[,2]\n\n##         use names and removing the brackets by replacing with a null string\nfeatures2 <-str_replace(features, \"[()]\",\"\") ## left one of the brackets behind \nfeatures2 <-str_replace(features2, \"[()]\",\"\")  ## removed the other side of the bracket\n\n##         grep uses pattern match to identify where the columns with mean,Mean,std\n##         subsetting my list of columns (features2) picking only the menas/std\n\nfeatures <- grep(\"*mean*|*std*|*Mean*\", features2)\nColnames <- features2[features]\n\n## Step 4: Read the Train and Test tables 561 columns of measures each\n##         use same subsetting as for columns to pick the measures that match the mean \n##         and std columns\n\nX_train <- read.table(\"./UCI HAR Dataset/train/X_train.txt\")[features]\nX_test <- read.table(\"./UCI HAR Dataset/test/X_test.txt\")[features]\n\n##         tested it dim(X_train) ## head(X_train) ## Had no column headers\n\n## Step 5: Use the feature vector to add column headers to the measures tables\n\nnames(X_train) <-Colnames  ## add column headers\nnames(X_test) <- Colnames  ## add column headers\n\n## Step 6: Read the activity vectors for test and train tells me Walkng etc\n\ny_train <- read.table(\"./UCI HAR Dataset/train/y_train.txt\")\ny_test  <- read.table(\"./UCI HAR Dataset/test/y_test.txt\")\n\n##         tested it: dim(y_train) The activity id head(y_train) had no column name\n##         Add a column header to the activity so you know its the activity\n\na <- \"Activity\"            ## Create a column header called Activity\nnames(y_train) <-a         ## Add it to y_train\nnames(y_test) <-a          ## Add it to y_test\n\n## Step 7: Read the subject vector ids who was subject in each row of the measures (X_)\n\nsubject_train <- read.table(\"./UCI HAR Dataset/train/subject_train.txt\")\nsubject_test  <- read.table(\"./UCI HAR Dataset/test/subject_test.txt\")\n\n##         tested it: unique(subject_train) ## range from 1:30\n##         head(subject_train) ##had no column header\n\ns<-\"Subject\"              ## Create one so we remember its the subject of the observation\nnames(subject_train) <-s  ## Add it to Subject Train\nnames(subject_test)  <-s  ## Add it to Subject Test\n\n## Step 8 : Combine the Subject activity and Measures into one table \n\ntrainfact <-cbind(cbind(subject_train, y_train), X_train)\ntestfact  <-cbind(cbind(subject_test,  y_test),  X_test)\n\n##         head(trainfact) ## Now have Subject, Activity, Measure Columns\n\n## Step 9: Combine test and train into one table\n\ncombinedData <-rbind(trainfact,testfact)\n\n##         write.table(combinedData, \"tester.txt\",  row.names = FALSE,  quote = FALSE)\n##         test case will be subject 1 LAYING first measure tBodyAcc-mean-X .22159824\n\n## Step 10 : Switch out Activity id for its List of Value Name and convert to factor\n\ncombinedData$Activity <- factor(combinedData$Activity, \n                                levels = activityLov[,1], labels = activityLov[,2])\n\n## also convert Subject to Factor, this is just the participant number\n\ncombinedData$Subject <- as.factor(combinedData$Subject)\n\n## Step11: Gather or couldve melted the wide format into a narrow one\n##         so each column of measures becomes a measure name in a row\n\ntidydata <- combinedData %>%\n            gather( Variable , Value, -Subject, -Activity)\n\n## head(tidydata) now have a subject, activity, a measure, value for a observation\n##         but there are multiple observations per subject/activity/measure_name\n\ntidydata$Variable <-as.factor(tidydata$Variable)\n\n## Step 11 summarizing to a subject, activity a single measure and \n##         calculate its mean for all observations\n##         got aggregate from the R is for Everyone Book by Lander\n##         having syntax errors with group by and summarize\n\ntidydata  <-aggregate( Value ~ Subject + Activity + Variable, data = tidydata, FUN = mean)\n\n## Step 12 write it out\n##         head(tidydata) now there is one average observation for each subject, activity measure\n\nwrite.table(tidydata, \"tidydata.txt\",  row.names = FALSE,  quote = FALSE)\n\n\n## Acknowledging R for Everyone, Jared Lander \n## and numerous posts attempting to compare or explain the suble differences\n## in syntax dplyr, plyr, tidyr, reshape \n## the above steps may contain some extra or un-needed steps, but it helped me verify\n## based on my interpretation of the requirement\n\n\n",
    "created" : 1437804358328.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1808222902",
    "id" : "5DF317AE",
    "lastKnownWriteTime" : 1437804374,
    "path" : "~/GitHub/GetCleanData/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}